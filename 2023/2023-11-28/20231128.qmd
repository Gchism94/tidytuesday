---
title: "Your Title Here"
author: 
  - name: Dr. Greg Chism
    affiliations:
      - name: School of Information, University of Arizona
description: "#TidyTuesday plot for ___"
format: 
  html:
    theme: Lux
    code-tools: true
execute:
  echo: true
  eval: true
  warning: false
  message: false
toc: true
categories: 
  - R
  - DataViz
  - "#TidyTuesday"
---

## Load packages

```{r}

if (!require(pacman))
  install.packages("pacman")

pacman::p_load(camcorder,
               gchismtt,
               glue,
               ggtext,
               here,
               patchwork,
               scales,
               showtext,
               tidyverse
               )

pacman::p_load_gh("AllanCameron/geomtextpath")

```

## Load data

```{r}
tuesdata <- tidytuesdayR::tt_load("2023-11-28")
episodes <- tuesdata$drwho_episodes
episodes |> glimpse()
```

## Load fonts

```{r}
font_add_google("Roboto", "roboto")
showtext_auto()
body_font = "Futura"
title_font = "Futura"
```

## Define colours

```{r}
bg_col <- ""  # Specify background color
text_col <- ""  # Specify text color
highlight_col <- ""  # Specify highlight color
```

## Data wrangling

```{r}
data <- episodes |> 
   group_by(season_number) |>
   mutate(doctor = case_when(
     season_number == 1 ~ "Christopher Eccleston",
     season_number %in% 2:4 ~ "David Tennant",
     season_number == 2009 | season_number == 2010 ~ "David Tennant",  # For special episodes
     season_number %in% 5:7 ~ "Matt Smith",
     season_number %in% 8:10 ~ "Peter Capaldi",
     season_number %in% 11:13 ~ "Jodie Whittaker",
     TRUE ~ NA_character_  # For any other cases
   ),
   color = case_when(
     doctor == "Christopher Eccleston" ~ "#000000",
     doctor == "David Tennant" ~ "#8B4513",
     doctor == "Matt Smith" ~ "#000080",
     doctor == "Peter Capaldi" ~ "#2F4F4F",
     TRUE ~ "#1E90FF"
   ),
   label = case_when(doctor == "Christopher Eccleston" ~ "<span style='color:#000000;font-size:10pt; font-family:Futura'>Christopher<br>Eccleston</span>",
                     doctor == "David Tennant" ~ "<span style='color:#8B4513;font-size:10pt; font-family:Futura'>David Tennant</span>",
                     doctor == "Matt Smith" ~ "<span style='color:#000080;font-size:10pt; font-family:Futura'>Matt Smith</span>",
                     doctor == "Peter Capaldi" ~ "<span style='color:#2F4F4F;font-size:10pt; font-family:Futura'>Peter Capaldi</span>",
                     TRUE ~ "<span style='color:#1E90FF;font-size:10pt; font-family:Futura'>Jodie Whittaker</span>")
   )

### |>
   summarise(num_viewers = mean(uk_viewers),
             rating = mean(rating)) |>
```

## Start recording

```{r}
#| eval: false
gg_record(
  dir = file.path(here("2023", "2023-11-28", "recording")),
  device = "png",
  width = 7,
  height = 5,
  units = "in",
  dpi = 300
)
```

## Define text

```{r}
social <- gchismtt::social(
  bg_col = bg_col,
  icon_col = highlight_col,
  text_col = text_col,
  body_font = body_font
)

title <- "Doctor Who Viewers"  # Add your title here
st <- ""  # Add subtitle text here
cap <- "Data: datardis package | Viz: Greg Chism"

```

## Plot

```{r}
# Add plotting code here
data |> 
ggplot() +
  # Make custom panel grid
  geom_hline(
    aes(yintercept = y), 
    data.frame(y = c(0:4) * 3),
    color = "lightgrey"
  ) +
  geom_col(
    aes(x = season_number, 
        y = uk_viewers,
        fill = color),
    position = "dodge2",
    show.legend = TRUE,
    alpha = 0.75
    ) +
  geom_segment(
    aes(x = season_number,
        y = 0,
        xend = season_number,
        yend = 10),
    linetype = "dashed",
    color = "gray80"
  ) +
  labs(title = title,
       y = "UK Viewers",
       caption = cap) +
  geom_textline(aes(x = season_number, y = max(uk_viewers), group = doctor, label = label),
                arrow = arrow(length = unit(3, "mm")),
                lineend = "round", 
                linejoin = "mitre",
                rich = TRUE) +
  scale_fill_identity() +
  scale_y_continuous(labels = unit_format(unit = "M")) +
  coord_polar() +
  theme_bw(base_family = body_font) +
  theme(plot.margin = margin(5, 5, 5, 5),
        panel.border = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        panel.grid.major = element_blank(),
        plot.title = element_markdown(family = title_font, face = "bold"),
        plot.caption = element_markdown(family = "WS Simple Gallifreyan", size = 10))



theme(
  plot.margin = margin(5, 5, 5, 5),
  plot.background = element_rect(fill = bg_col, colour = bg_col),
  panel.background = element_rect(fill = bg_col, colour = bg_col),
  plot.caption = element_textbox_simple(
    colour = text_col,
    hjust = 0.5,
    halign = 0.5,
    margin = margin(b = 10, t = 10),
    lineheight = 0.5,
    family = body_font
  )
)
```


## Save gif

```{r}
#| eval: false
gg_playback(
  name = file.path(here("2023", "2023-11-28"), paste0("20231128", ".gif")),
  first_image_duration = 4,
  last_image_duration = 20,
  frame_duration = .25,
  background = bg_col
)
```

